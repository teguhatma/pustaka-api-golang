definitions:
  schemas.APIResponse200:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: success
        type: string
    type: object
  schemas.APIResponse400:
    properties:
      code:
        example: 400
        type: integer
      error:
        type: string
      message:
        example: bad request
        type: string
    type: object
  schemas.APIResponse404:
    properties:
      code:
        example: 404
        type: integer
      error:
        type: string
      message:
        example: not found
        type: string
    type: object
  schemas.APIResponseBook:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/schemas.BookResponse'
      message:
        example: success
        type: string
    type: object
  schemas.APIResponseBooks:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/schemas.BookResponse'
        type: array
      message:
        example: success
        type: string
    type: object
  schemas.APIResponseDelete200:
    properties:
      code:
        example: 200
        type: integer
      id:
        example: 1
        type: integer
      message:
        example: success
        type: string
    type: object
  schemas.APIResponseUser:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/schemas.UserResponse'
      message:
        example: success
        type: string
    type: object
  schemas.APIResponseUsers:
    properties:
      code:
        example: 200
        type: integer
      data:
        items:
          $ref: '#/definitions/schemas.UserResponse'
        type: array
      message:
        example: success
        type: string
    type: object
  schemas.BookRequest:
    properties:
      description:
        type: string
      price:
        type: integer
      rating:
        type: integer
      title:
        type: string
    required:
    - price
    - title
    type: object
  schemas.BookResponse:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      price:
        type: integer
      rating:
        type: integer
      updatedAt:
        type: string
    type: object
  schemas.UserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  schemas.UserResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Get all books
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/schemas.APIResponseBooks'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.APIResponse400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.APIResponse404'
      summary: Get all books
      tags:
      - Books
    post:
      consumes:
      - application/json
      description: Post a book
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schemas.BookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/schemas.APIResponseBook'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.APIResponse400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.APIResponse404'
      summary: Post a book
      tags:
      - Books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete book by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/schemas.APIResponse200'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.APIResponse400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.APIResponse404'
      summary: Delete book by ID
      tags:
      - Books
    get:
      consumes:
      - application/json
      description: Find book by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/schemas.APIResponseBook'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.APIResponse400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.APIResponse404'
      summary: Find book by ID
      tags:
      - Books
    put:
      consumes:
      - application/json
      description: Update the book by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schemas.BookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/schemas.APIResponseBook'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.APIResponse400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.APIResponse404'
      summary: Update the book by ID
      tags:
      - Books
  /users:
    get:
      consumes:
      - application/json
      description: Get all user
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/schemas.APIResponseUsers'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.APIResponse400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.APIResponse404'
      summary: Get all user
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a user
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schemas.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/schemas.APIResponseUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.APIResponse400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.APIResponse404'
      summary: Create a user
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/schemas.APIResponseDelete200'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.APIResponse400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.APIResponse404'
      summary: Delete user by ID
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Find user by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/schemas.APIResponseUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.APIResponse400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.APIResponse404'
      summary: Find user by ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update user by Id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/schemas.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/schemas.APIResponseUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.APIResponse400'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.APIResponse404'
      summary: Update user by Id
      tags:
      - Users
swagger: "2.0"
